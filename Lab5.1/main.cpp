#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <locale.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>
#include <math.h>
#include <windows.h>
#include <time.h>

#define STRING_SIZE 256

/*
	Write and debug a program in which:
	- the user enters an integer n - the dimension of the array;
	- is generated by a random number generator
	a two-dimensional array of positive real integers of size n * n
	in the range of numbers from 1 to 20;
	- array rows are sorted in descending order;
	- elements of the nth row and nth column change places.
	Display the results of all actions on the screen.
*/

int main()
{
	int** array = NULL;
	int n;
	int temp;

	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	srand(time(NULL));

	printf("Enter size of array: ");
	if (scanf("%d", &n))
	{
		array = (int**)malloc(sizeof(int*) * n);
		if (!array)
		{
			printf("Bad memory allocation");
			return 1;
		}
		for (int i = 0; i < n; i++)
		{
			array[i] = (int*)malloc(sizeof(int) * n);
			if (!array[i])
			{
				printf("Bad memory allocation");
				return 1;
			}
		}

		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				array[i][j] = -100 + rand() % 200;
			}
		}

		printf("Received array: \n");

		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				printf("%4d", array[i][j]);
			}
			puts("");
		}

		for (int i = 0; i < n; i++)
		{
			for (int k = 0; k < n; k++)
			{
				for (int j = 0; j < n - 1 - k; j++)
				{
					if (array[i][j] > array[i][j + 1])
					{
						temp = array[i][j];
						array[i][j] = array[i][j + 1];
						array[i][j + 1] = temp;
					}
				}
			}
		}

		printf("Sorted array: \n");

		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				printf("%4d", array[i][j]);
			}
			puts("");
		}

		int i = 0;
		for (int j = 0; j < n; j++)
		{
			temp = array[n - 1][j];
			array[n - 1][j] = array[i][n - 1];
			array[i][n - 1] = temp;
			i++;
		}


		printf("Result array: \n");

		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				printf("%4d", array[i][j]);
			}
			puts("");
		}
	}
	else
	{
		printf("Enter mistake");
	}
	
	return 0;
}